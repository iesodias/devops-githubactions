name: Jobs com Dependências

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job 1: Preparação (executa primeiro)
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      environment: ${{ steps.env.outputs.environment }}
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Determinar versão
      id: version
      run: |
        VERSION="1.$(date +%Y%m%d).$(git rev-parse --short HEAD)"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "📋 Versão definida: $VERSION"
    
    - name: Determinar ambiente
      id: env
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          ENV="production"
        else
          ENV="staging"
        fi
        echo "environment=$ENV" >> $GITHUB_OUTPUT
        echo "🌍 Ambiente: $ENV"

  # Job 2: Testes (depende do setup)
  tests:
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Mostrar informações do setup
      run: |
        echo "📋 Versão: ${{ needs.setup.outputs.version }}"
        echo "🌍 Ambiente: ${{ needs.setup.outputs.environment }}"
    
    - name: Executar testes
      run: |
        echo "🧪 Executando testes para versão ${{ needs.setup.outputs.version }}..."
        sleep 3
        echo "✅ Testes concluídos"

  # Job 3: Build (depende do setup)
  build:
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Build da aplicação
      run: |
        echo "🏗️ Building versão ${{ needs.setup.outputs.version }}..."
        echo "🌍 Para ambiente: ${{ needs.setup.outputs.environment }}"
        sleep 4
        echo "✅ Build concluído"
    
    - name: Criar artefato versionado
      run: |
        mkdir -p dist
        echo "App version ${{ needs.setup.outputs.version }}" > dist/app-${{ needs.setup.outputs.version }}.txt
    
    - name: Upload artefato
      uses: actions/upload-artifact@v4
      with:
        name: app-${{ needs.setup.outputs.version }}
        path: dist/

  # Job 4: Deploy (depende dos testes E build)
  deploy:
    runs-on: ubuntu-latest
    needs: [setup, tests, build]
    if: needs.setup.outputs.environment == 'production'
    
    steps:
    - name: Download artefatos
      uses: actions/download-artifact@v4
      with:
        name: app-${{ needs.setup.outputs.version }}
        path: ./artifacts
    
    - name: Deploy para produção
      run: |
        echo "🚀 Fazendo deploy da versão ${{ needs.setup.outputs.version }}..."
        echo "📦 Artefatos disponíveis:"
        ls -la ./artifacts
        sleep 3
        echo "✅ Deploy concluído com sucesso!"

  # Job 5: Notificação (sempre executa, independente do resultado)
  notify:
    runs-on: ubuntu-latest
    needs: [setup, tests, build, deploy]
    if: always()
    
    steps:
    - name: Notificar resultado
      run: |
        echo "📬 Enviando notificação..."
        echo "📋 Versão: ${{ needs.setup.outputs.version }}"
        echo "🌍 Ambiente: ${{ needs.setup.outputs.environment }}"
        echo "🧪 Testes: ${{ needs.tests.result }}"
        echo "🏗️ Build: ${{ needs.build.result }}"
        echo "🚀 Deploy: ${{ needs.deploy.result }}"
        echo "✅ Notificação enviada"